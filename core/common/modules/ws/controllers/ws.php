<?phpif (!defined('BASEPATH'))      exit('No direct script access allowed');require_once(COMMONPATH .        'core/lands_ws.php');class ws extends lands_ws {      function __construct() {            parent::__construct();            $this->configura();      }      function index() {//            	ini_set('memory_limit', $new_memory);            $funcao = $this->pagina_atual;            if ($this->uri->segment($this->app->Segmento_padrao_txf + 1)) {                  $funcao = ($this->uri->segment($this->app->Segmento_padrao_txf + 1));            }            if (!method_exists(__CLASS__, $funcao)) {                  $this->carrega_pagina($this->pagina_atual);            } else {                  //executa uma funcao que deve ser programa nesta classe.                  $this->$funcao();            }      }      function configura() {            $this->conecta_mbc($this->app->Conexoes_for);      }      function busca() {            $where = "where Id_int is not null ";            if ($this->uri->segment($this->app->Segmento_padrao_txf + 2)) {                  $tabela = ($this->uri->segment($this->app->Segmento_padrao_txf + 2));            }            if ($this->uri->segment($this->app->Segmento_padrao_txf + 3)) {                  $filtro = ($this->uri->segment($this->app->Segmento_padrao_txf + 3));            }            if ($this->uri->segment($this->app->Segmento_padrao_txf + 4)) {                  $valor = ($this->uri->segment($this->app->Segmento_padrao_txf + 4));            }                                    if ((isset($filtro)) && (isset($valor))) {                  $where.= "and $filtro='$valor'";            }                        if (isset($_REQUEST['where'])){                  $where.=" and ".$_REQUEST['where'];            }                                                            if (!isset($tabela)) {                  die('Voce deve determinar uma tabela');            }            $resposta = $this->mbc->buscar_completo($tabela, $where);            if($resposta[0]){                               $retorno[0]->status='ok';                  $retorno[0]->mensagem='Pesquisa efetuada corretamente';                  $retorno[0]->qtd=count($resposta);                  //            ver($resposta);            foreach ($resposta as $resp) {                  foreach ($resp as $key => $value) {                                                                        if ($key!='Imagens' && $key!='Videos' && $key!='Arquivos'){                              $resp->$key = strip_tags($value);                        }                                           }            }             $retorno[0]->registros=$resposta;            } else {                  $retorno[0]->status='vazio';                  $retorno[0]->mensagem='Nenhum registro encontrado';                  $retorno[0]->qtd=0;            }            $this->exibir_resposta($retorno);      }      function exibir_resposta($data) {            $this->grava_log();            $resposta = $this->formata_saida($data);            print_r($resposta);            die();      }      function grava_log($data = null) {            return true;      }      function formata_saida($data = null, $formato = 'xml') {            if (isset($_REQUEST['formato'])) {                  $formato = $_REQUEST['formato'];            }            $this->load->library('format');            $dados = object_to_array($data);            switch ($formato) {                  case 'xml':                        echo header("Content-type: text/xml; charset=utf-8");                        $resposta = $this->format->to_xml($dados);                        break;                  case 'json':                        $resposta = json_encode($dados);                        break;                  case 'array':                        $resposta = $dados;                        break;                  default:                        echo header("Content-type: text/xml; charset=utf-8");                        $resposta = $this->format->to_xml($dados);                        break;            }            return $resposta;      }}