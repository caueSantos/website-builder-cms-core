<?phpif (!defined('BASEPATH'))    exit('No direct script access allowed');require_once(COMMONPATH .        'core/lands_core.php');class login extends lands_core {    public $modulo =            'login';    public $mensagem;    public $redirector = null;    public $diferenca_fuso_servidor = 5;    public $lista_cookies = 'Email_txf,Senha_txf,Login_txf,Senha_txp,Usuario_txf';    function __construct() {        parent::__construct();//$this->load->helper('url');        $this->carrega_itens();        $this->carrega_cookies();        $this->previne_injection();    }    public function index($mensagem = null) {        $this->carrega_dados('login');        if (isset($_REQUEST['redirect_link'])) {            $_REQUEST['redirect_link'] = addslashes($_REQUEST['redirect_link']);            $redir2 = str_replace($this->app->Url_cliente, "", $_REQUEST['redirect_link']);            $redir = $_SERVER['REQUEST_SCHEME'] . ':' . $this->app->Url_cliente;//            ver($redir,1);            $redir = str_replace("http://http://", "http://", $redir);//            ver($redir,1);            $redir = str_replace("https://https://", "https://", $redir);//            ver($redir,1);            $redir.=$redir2;//            ver($redir,1);//            ver($redir);            $this->smarty->assign('redirect_link', $redir);        }        if ($this->uri->segment(2)) {            $pagina_atual = $this->uri->segment(2);            $this->carrega_dados($pagina_atual);        }        if (isset($mensagem)) {            $this->smarty->assign('mensagem', $mensagem);        }        try {            $this->model_smarty->render_avancado('login', $this->app->Template_txf, 'layout_login');        } catch (Exception $e) {            $this->model_smarty->render('login', 'padrao');        }    }    function previne_injection() {        if ($this->app->Lands_id == 'config') {//            if (!is_lands()) {//                if (!$_REQUEST['Senha'] == 'Ld230551') {//                    die('acesso invalido');//                }//            }        }    }    function carrega_itens() {        $requisicao = $_REQUEST;        $this->requisicao = $_REQUEST;        unset($requisicao['PHPSESSID']);        unset($requisicao['ci_session']);        if (isset($requisicao['redirect_link'])) {            $this->smarty->assign('redirect_link', $requisicao['redirect_link']);            $this->smarty->assign('requisicao', $requisicao);        }    }    function fazer_login() {        if (isset($_REQUEST['redirect_link'])) {            $_REQUEST['redirect_link'] = addslashes($_REQUEST['redirect_link']);        }        /* LOGIN AUTOMATICO *///warn.com.br/login/fazer_login?Login_txf=warn&Senha_txp=warn&redirect_link=/relatorios        $this->load->model('model_login');        if ($_REQUEST) {            if (($_REQUEST['Login_txf'] == $this->app->Lands_id) && ($_REQUEST['Senha_txp'] == $this->app->Lands_pass)) {                $usuario = new stdClass();                $usuario->Id_int = 1;                $usuario->Nome_txf = 'Admin';                $usuario->Lands_id = $this->app->Lands_id;                $usuario->Login_txf = $this->app->Lands_id;                $usuario->Senha_txp = $this->app->Lands_pass;                $usuario->Nivel_sel = 3;                $usu[0] = $usuario;            } else {                $usu = $this->model_login->validar_usuario_senha_app($_REQUEST['Login_txf'], $_REQUEST['Senha_txp'], $_REQUEST['Lands_id']);            }        }        if (isset($usu[0])) {            $this->session->set_userdata('usuario', $usu[0]);            $this->guarda_cookies();            if (isset($_REQUEST['redirect_link'])) {                $_REQUEST['redirect_link'] = str_replace('https:https:', 'https:', $_REQUEST['redirect_link']);                redireciona($_REQUEST['redirect_link']);            }            else                redirect('/');        } else {            $mensagem = '<label style="color:red">Login / senha inválidos</label>';            $this->index(null, $mensagem);        }    }    function login_smtpreport() {        if (isset($_REQUEST['redirect_link'])) {            $_REQUEST['redirect_link'] = addslashes($_REQUEST['redirect_link']);        }        /* LOGIN AUTOMATICO *///warn.com.br/login/fazer_login?Login_txf=warn&Senha_txp=warn&redirect_link=/relatorios        $usuario = addslashes($_REQUEST['Login_txf']);        $senha = addslashes($_REQUEST['Senha_txp']);        $usu = $this->mbc->executa_sql("select * from clientes where Usuario_txf='$usuario' and Senha_txf='$senha'");        if (isset($usu[0])) {            $this->session->set_userdata('usuario', $usu[0]);            $this->guarda_cookies();            if (isset($_REQUEST['redirect_link'])) {                redirect($_REQUEST['redirect_link']);            }            else                redirect('/');        } else {            $mensagem = '<label style="color:red">Login / senha inválidos</label>';            $this->index($mensagem);        }    }    function login_arquivos() {        $this->conecta_mbc($this->app->Conexoes_for);        $usuario = $_POST['Login_txf'];        $senha = md5($_POST['Senha_txp']);        $usu = $this->mbc->executa_sql("select * from usuarios_ftp where Usuario_txf='$usuario' and Senha_txp='$senha'");        if (isset($usu[0])) {            if ($usu[0]->Data_expiracao_dat >= date('Y-m-d')) {                if ($usu[0]->Data_expiracao_dat == date('Y-m-d')) {                    $hora = (date('h')) + $this->diferenca_fuso_servidor;                    $minuto = (date('i'));                    $horario = ($hora . ':' . $minuto);                    if ($usu[0]->Hora_expiracao_txf >= $horario) {                        $this->session->set_userdata('usuario', $usu[0]);                        if (isset($_REQUEST['redirect_link'])) {                            redirect($_REQUEST['redirect_link']);                        }                        else                            redirect('/');                    }                    else {                        $mensagem = '<label style="color:red">Sua senha expirou as ' . $usu[0]->Hora_expiracao_txf . 'hs, entre em contato conosco.</label>';                        $this->index($mensagem);                    }                } else {                    $this->session->set_userdata('usuario', $usu[0]);                    if (isset($_REQUEST['redirect_link'])) {                        redirect($_REQUEST['redirect_link']);                    }                    else                        redirect('/');                }            } else {                $mensagem = '<label style="color:red">Sua senha expirou, entre em contato conosco.</label>';                $this->index($mensagem);            }        } else {            $mensagem = '<label style="color:red">Login / senha inválidos</label>';            $this->index($mensagem);        }    }    function minhafesta() {        $this->conecta_mbc($this->app->Conexoes_for);        $usuario = $_POST['Email_txf'];        $senha = md5($_POST['Senha_txp']);        $where = "where Email_txf='$usuario' and Senha_txp='$senha'";        $query = "select * from usuarios_festa " . $where;        $usu = $this->mbc->executa_sql($query);        if (isset($usu[0])) {            $this->session->set_userdata('usuario', $usu[0]);            if (isset($_REQUEST['redirect_link'])) {                redirect($_REQUEST['redirect_link']);            }            else                redirect('/');        } else {            $this->session->set_userdata('email', $usuario);            $mensagem = '<label style="color:red">Login / senha inválidos</label><br><a style="color:blue" href="' . $this->app->Url_cliente . 'recuperar_senha ">Recuperar senha</a>';            $this->index($mensagem);        }    }    function restrita() {        $this->conecta_mbc($this->app->Conexoes_for);        $tabela = $_POST['Tabela_txf'];        $login = $_POST['Login_txf'];        if (isset($_POST['Pasta_exames'])) {            $pasta = $_POST['Pasta_exames'];        } else {            $pasta = 'usuarios/ftp/';        }        $redirect = $_POST['redirect_link'];        $senha = $_POST['Senha_txf'];        $pasta.=$login . '-' . $senha;        $pasta.='/';        if (is_dir($pasta)) {            $pasta_final = $this->app->Url_cliente . $pasta;        } else {            $pasta_final = 'Pasta Incorreta';        }        $login = addslashes($login);        $senha = addslashes($senha);        $where = "where Login_txf='$login' and Senha_txf='$senha' and Ativo_sel='SIM'";        $query = "select * from   $tabela " . $where;        if (!isset($tabela))            die('Tabela de validacao nao passada por parametro');        if (!isset($redirect))            die('Redirect nao passado por parametro');        $usu = $this->mbc->executa_sql($query);        if (isset($usu[0])) {            $usu[0]->Pasta_txf = $pasta_final;            $this->session->set_userdata('usuario', $usu[0]);            $this->guarda_cookies();            if (isset($_REQUEST['redirect_link'])) {                redirect($_REQUEST['redirect_link']);            }            else                redirect('/');        } else {            $mensagem = '<label style="color:red">Login / senha inválidos</label>';            $this->index($mensagem);        }    }    function restrita_multi() {        $this->conecta_mbc($this->app->Conexoes_for);        $tabela = $_POST['Tabela_txf'];        $login = $_POST['Login_txf'];        $redirect = $_POST['redirect_link'];        $senha = $_POST['Senha_txf'];        $login = addslashes($login);        $senha = addslashes($senha);        $where = "where Login_txf='$login' and Senha_txf='$senha' and Ativo_sel='SIM'";        $query = "select * from   $tabela " . $where;        if (!isset($tabela))            die('Tabela de validacao nao passada por parametro');        if (!isset($redirect))            die('Redirect nao passado por parametro');               $usu = $this->mbc->executa_sql($query);         if (isset($usu[0])) {            $usu[0]->Tipo_sel = 'clinica';            $this->session->set_userdata('usuario', $usu[0]);            if (isset($_REQUEST['redirect_link'])) {                redirect($_REQUEST['redirect_link']);            }            else                redirect('/');        } else {            $usuario_vet = $this->mbc->executa_sql("select * from sincro where Extensao_txf='VET' and Usuario_txf='{$login}' and Senha_txf='{$senha}' ");                        if ($usuario_vet[0]->Id_int) {                $usuario_vet[0]->Tipo_sel = 'vet';                $this->session->set_userdata('usuario', $usuario_vet[0]);                redireciona($this->app->Url_cliente . 'restrita');            }            $usuario_final = $this->mbc->executa_sql("select * from sincro where Extensao_txf='SLI' and Usuario_txf='{$login}' and Senha_txf='{$senha}' ");            if ($usuario_final[0]->Id_int) {                redireciona($this->app->Url_cliente . 'sincro/' . $usuario_final[0]->Pdf_txf);            }            $mensagem = '<label style="color:red">Login / senha inválidos</label>';            $this->index($mensagem);        }    }    /*     * OBJETIVO: PROCURA o os usuarios para o cliente     * PARAMETROS: array of cliente ( tabela clientes do CORE )     * RETORNO: echo TPL form_login ou falso      */    function busca_lista_usuarios($dominio, $cliente = null) {        if (!isset($cliente[0]->Id_int)) {            die('Erro modulo Login->busca_lista_usuarios($cliente); ## cliente deve ser um array de objetos cliente##');        }        $this->conecta_mbc($this->app->Conexoes_for);        $usuarios = $this->mbc->executa_sql("select * from usuarios where Dominio_txf='$dominio' order by Nome_txf");        if (isset($usuarios[0]->Id_int)) {            $this->smarty->assign('cli', $cliente);            $this->smarty->assign('usuarios', $usuarios);            $this->model_smarty->render_ajax('form_login', $this->app->Template_txf);        } else {            return false;        }    }    public function login_simples() {        if (!$_POST['Tabela_txf']) {            $tabela = "usuarios";        } else {            $tabela = $_POST['Tabela_txf'];        }        $login = $_POST['Login_txf'];        $senha = $_POST['Senha_txf'];        $this->carrega_mbc($this->app->Conexoes_for);        $query = "select * from $tabela where Login_txf='{$login}' and Senha_txf='{$senha}' and Ativo_sel='SIM'";        $resultado = $this->mbc->executa_sql($query);        if (isset($resultado[0]->Id_int)) {            $this->session->set_userdata('usuario', $resultado[0]);            $this->smarty->assign('mensagem', 'login_ok');            $this->model_smarty->render_ajax('msg_login', $this->app->Template_txf);            if ($_REQUEST['redirect_link']) {                redireciona($this->app->Url_cliente . $_REQUEST['redirect_link']);            }        } else {                        $this->smarty->assign('mensagem', 'login_erro');            $this->model_smarty->render_ajax('msg_login', $this->app->Template_txf);        }        die();    }    public function login_laboratorio() {        $cliente = $_POST['Codigo_cliente_txf'];        $requisicao = $_POST['Codigo_requisicao_txf'];        $this->carrega_mbc($this->app->Conexoes_for);        $query = "select * from resultados where Codigo_cliente_txf='{$cliente}' and Codigo_requisicao_txf='{$requisicao}'";                $resultado = $this->mbc->executa_sql($query);        //        ver($resultado);        if (isset($resultado[0]->Id_int)) {            $this->smarty->assign('mensagem', 'login_ok');            $this->model_smarty->render_ajax('msg_login', $this->app->Template_txf);            $caminho = $this->app->Url_cliente . 'laudos/' . urldecode($resultado[0]->Arquivo_txf);            redireciona($caminho);        } else {            $this->smarty->assign('mensagem', 'login_erro');            $this->model_smarty->render_ajax('msg_login', $this->app->Template_txf);        }    }    public function ftp() {        $this->diferenca_fuso_servidor = 16;        $usuario = $_POST['Email_txf'];        $senha = md5($_POST['Senha_txp']);        $this->carrega_mbc($this->app->Conexoes_for);        $query = "select * from usuarios_ftp where (Email_txf='$usuario' or Usuario_txf='$usuario') and Senha_txp='$senha'";        $usuarios = $this->mbc->executa_sql($query);        if (isset($usuarios[0]->Id_int)) {            if ($usuarios[0]->Ativo_sel == 'SIM') {                if ($usuarios[0]->Data_expiracao_dat >= date('Y-m-d')) {                    if ($usuarios[0]->Data_expiracao_dat == date('Y-m-d')) {                        $hora = (date('h')) + $this->diferenca_fuso_servidor;                        $minuto = (date('i'));                        $horario = ($hora . ':' . $minuto);                        if ($usuarios[0]->Hora_expiracao_txf >= $horario) {                            $user = new StdClass;                            $user = $usuarios[0];                            $this->session->set_userdata('usuario', $user);                            $this->smarty->assign('mensagem', 'login_ok');                            $this->model_smarty->render_ajax('msg_login', $this->app->Template_txf);                            redireciona($this->app->Url_cliente);                        } else {                            $this->smarty->assign('usuario', $usuarios[0]);                            $this->smarty->assign('mensagem', 'senha_expirou_hora');                            $this->model_smarty->render_ajax('msg_login', $this->app->Template_txf);                        }                    } else {                        $user = new StdClass;                        $user = $usuarios[0];                        $this->session->set_userdata('usuario', $user);                        $this->smarty->assign('mensagem', 'login_ok');                        $this->model_smarty->render_ajax('msg_login', $this->app->Template_txf);                        redireciona($this->app->Url_cliente);                    }                } else {                    $this->smarty->assign('usuario', $usuarios[0]);                    $this->smarty->assign('mensagem', 'senha_expirou');                    $this->model_smarty->render_ajax('msg_login', $this->app->Template_txf);                }            } else {                $this->smarty->assign('mensagem', 'usuario_inativo');                $this->model_smarty->render_ajax('msg_login', $this->app->Template_txf);            }        } else {            $this->smarty->assign('mensagem', 'login_erro');            $this->model_smarty->render_ajax('msg_login', $this->app->Template_txf);        }    }    /*     * OBJETIVO: PROCURA o os usuarios para o cliente     * PARAMETROS: array of cliente ( tabela clientes do CORE )     * RETORNO: echo TPL form_login ou falso      */    function login_painel($id = null) {        if (!isset($_POST['Lands_id'])) {            die('erro');        }                       $usuario = addslashes($_POST['username']);        $password = addslashes($_POST['password']);//lands_whmcs        $this->conecta_mbc($this->app->Conexoes_for);        $sql = "select c.id, c.firstname, c.lastname, c.companyname, c.email, c.password,               h.domain, h.domainstatus               from lands_whmcs.tblclients c               left outer join lands_whmcs.tblhosting h               on h.userid=c.id              where h.domain!='' and h.domainstatus='Active'  and c.email='$usuario' group by c.companyname";        $sql2 = "select c.id, c.firstname, c.lastname, c.companyname, c.email, c.password               from lands_whmcs.tblclients c               where c.email='$usuario' group by c.companyname";        $sql3 = "select c.id, c.firstname, c.lastname, c.companyname, c.email, c.password, co.id as contato_firstname,	co.id as contato_id, co.userid as contato_userid, 	co.firstname as contato_firstname, co.lastname as contato_lastname, co.companyname as contato_companyname, co.email as contato_email, co.password as contato_password               from lands_whmcs.tblclients c 		left outer join lands_whmcs.tblcontacts co on co.userid=c.id              where c.email='$usuario' or co.email='$usuario'";        $usu = $this->mbc->executa_sql($sql3);//ver('chegou');        if ($usu) {            if (count($usu) > 1 || !$usu[0]->contato_id) {                $usuario = new stdClass();                $usuario->clientid = $usu[0]->id;                $usuario->firstname = $usu[0]->firstname;                $usuario->lastname = $usu[0]->lastname;                $usuario->companyname = $usu[0]->companyname;                $usuario->email = $usu[0]->email;                $usuario->password = $usu[0]->password;                $usuario->tipo = 'principal';            } else {                $usuario = new stdClass();                $usuario->clientid = $usu[0]->id;                $usuario->id = $usu[0]->contato_id;                $usuario->firstname = $usu[0]->contato_firstname;                $usuario->lastname = $usu[0]->contato_lastname;                $usuario->companyname = $usu[0]->contato_companyname;                $usuario->email = $usu[0]->contato_email;                $usuario->password = $usu[0]->contato_password;                $usuario->tipo = 'contato';            }            $this->smarty->assign('mensagem', 'login_ok');            $this->smarty->assign('usuario', $usuario);            $this->model_smarty->render_ajax('msg_login', $this->app->Template_txf);            $this->session->set_userdata('usuario', $usuario);            redireciona($this->app->Url_cliente);        } else {            $this->smarty->assign('id_usuario', $id);            $this->smarty->assign('mensagem', 'login_erro');            $this->model_smarty->render_ajax('msg_login', $this->app->Template_txf);        }    }    /*     * OBJETIVO: Buscar o email do usuário e reenviar a senha para o email.     * PARAMETROS: $_POST['Id_int'] ( id do usuario ) ;     * RETORNO: echo TPL msg_login com o resultado da operação.     */    function esqueceu_senha() {        if (!isset($_POST['Lands_id'])) {            die('Lands_id nao foi passado como parametro');        }        if (!isset($_POST['Id_int'])) {            die('Id do usuario nao foi passado como parametro');        }        $id = $_POST['Id_int'];        $this->conecta_mbc($this->app->Conexoes_for);        $usu = $this->mbc->executa_sql("select * from usuarios where Id_int=$id limit 1");        if (isset($usu[0]->Email_txf)) {            $this->smarty->assign('usuario', $usu[0]);            $this->load->model('model_login');            $this->model_login->configura($this->app);            if ($this->model_login->reenvia_email_senha($usu[0], 'recuperacao_senha')) {                $this->smarty->assign('email', $usu[0]->Email_txf);                $this->smarty->assign('resposta', 'email_enviado');                $this->model_smarty->render_ajax('msg_login', $this->app->Template_txf);            } else {                $this->smarty->assign('email', $usu[0]->Email_txf);                $this->smarty->assign('resposta', 'email_erro');                $this->model_smarty->render_ajax('msg_login', $this->app->Template_txf);            }        }    }    /*     * OBJETIVO: Buscar o email do usuário e reenviar a senha nova para o email. (MD5)     * PARAMETROS:      * $_POST['Id_int'] ( id do usuario ) ;     * $_POST['Tabela_txf'] ( Tabela a ser pesquisada );     * RETORNO: echo TPL msg_login com o resultado da operação.     */    function recuperar_senha() {        if (!isset($_POST['Lands_id'])) {            die('Lands_id nao foi passado como parametro');        }        if (!isset($_POST['Email_txf'])) {            die('Email do usuario nao foi passado como parametro');        }        if (!isset($_POST['Tabela_txf'])) {            die('Tabela do usuario nao foi passado como parametro');        }        $email = $_POST['Email_txf'];        $tabela = $_POST['Tabela_txf'];        $this->conecta_mbc($this->app->Conexoes_for);        $usu = $this->mbc->executa_sql("select * from $tabela where Email_txf='$email' limit 1");        if (isset($usu[0]->Email_txf)) {            $this->load->model('model_login');            $this->model_login->configura($this->app);            $nova_senha = $this->model_login->gera_senha_aleatoria();            $usu[0]->Senha_txf = $nova_senha;            $retorno = $this->mbc->updateTable($tabela, $usu[0], 'Id_int', $usu[0]->Id_int);            $cabecalho = new stdClass();            $cabecalho->Email_txf = $this->cliente->Email_txf;            $cabecalho->Nome_txf = 'Web Master';            $cabecalho->Assunto_txf = 'Recuperação de Senha - ' . $this->app->Nome_app_txf;            $this->smarty->assign('usuario', $usu[0]);            if ($this->model_login->reenvia_email_senha($usu[0], 'recuperacao_senha', $cabecalho)) {                $this->smarty->assign('mensagem', 'recuperacao_ok');                $this->model_smarty->render_ajax('msg_login', $this->app->Template_txf);            } else {                $this->smarty->assign('usuario', $usu[0]);                $this->smarty->assign('mensagem', 'recuperacao_erro');                $this->model_smarty->render_ajax('msg_login', $this->app->Template_txf);            }        } else {            $this->smarty->assign('mensagem', 'recuperacao_not_email');            $this->model_smarty->render_ajax('msg_login', $this->app->Template_txf);        }    }    public function revendedores() {        $usuario = $_POST['Usuario_txf'];        $senha = md5($_POST['Senha_txf']);        $this->carrega_mbc($this->app->Conexoes_for);        $sql = "select * from cadastros where Email_txf='$usuario' and Senha_txf='$senha'";        $revendedores = $this->mbc->executa_sql($sql);        if (isset($revendedores[0]->Id_int)) {            if ($revendedores[0]->Ativo_sel == 'SIM') {                $usuario = new StdClass;                $usuario = $revendedores[0];                $this->session->set_userdata('usuario', $usuario);                $this->guarda_cookies();                $this->smarty->assign('mensagem', 'login_ok');                $this->model_smarty->render_ajax('msg_login', $this->app->Template_txf);                redireciona($this->app->Url_cliente);            } else {                $this->smarty->assign('mensagem', 'usuario_inativo');                $this->model_smarty->render_ajax('msg_login', $this->app->Template_txf);            }        } else {            $this->smarty->assign('mensagem', 'login_erro');            $this->model_smarty->render_ajax('msg_login', $this->app->Template_txf);//$this->index($mensagem);        }    }    function carrega_cookies() {        $this->load->helper('cookie');        $lista_cookies = explode(',', $this->lista_cookies);        $cookies = new stdClass();        foreach ($lista_cookies as $cookie) {            $cookies->$cookie = $this->input->cookie($cookie, TRUE);        }        $cont = 0;        foreach ($cookies as $key => $value) {            if ($value) {                $cont = $cont + 1;            }        }        if ($cont >= 2) {            $this->smarty->assign('cookies', $cookies);            $this->smarty->assign('lembrar_senha', 'SIM');        }    }    function guarda_cookies() {        $this->load->helper('cookie');        if (isset($_POST['Armazena_senha'])) {            $cookies = explode(',', $this->lista_cookies);            foreach ($cookies as $cookinho) {                if (isset($_POST[$cookinho])) {                    $cookie = array(                        'name' => $cookinho,                        'value' => $_POST[$cookinho],//                                  'expire' => 86500,                        'expire' => time() + (10 * 365 * 24 * 60 * 60),                        'secure' => false                    );                    $this->input->set_cookie($cookie);                }            }        } else {            $cookies = explode(',', $this->lista_cookies);            foreach ($cookies as $cookinho) {                delete_cookie($cookinho);            }        }    }// carrega um unico cookie ( nao esta sendo ocupada )    function carrega_um_cookie($nome) {        return $this->input->cookie($nome, TRUE);    }// guarda um unico cookie ( nao esta sendo ocupada )    function guarda_um_cookie($nome, $valor = null) {        $this->load->helper('cookie');        $cookie = array(            'name' => $nome,            'value' => $valor,            'expire' => 86500,            'secure' => false        );        $this->input->set_cookie($cookie);    }    function autentica_pasta() {        if ($_POST['Usuario_txf']) {            $login = $_POST['Usuario_txf'];        } else {            $login = $_POST['Login_txf'];        }        $senha = $_POST['Senha_txf'];        $pasta = $_POST['Pasta_exames'];        $pasta.=$login . '-' . $senha;        $pasta.='/';        $pasta_temp = $pasta;        $pasta_temp2 = "../$pasta";        if (is_dir($pasta_temp)) {            $pasta = $pasta_temp;        }        if (is_dir($pasta_temp2)) {            $pasta = $pasta_temp2;        }                        if (is_dir($pasta)) {//            ver('logou');            $pasta_final = $this->app->Url_cliente . $pasta;            $usuario = new StdClass;            $usuario->Usuario_txf = $login;            $usuario->Login_txf = $login;            $usuario->Senha_txf = $senha;            $usuario->Pasta_txf = $pasta_final;//ver($pasta_final);            $this->session->set_userdata('usuario', $usuario);            $this->smarty->assign('mensagem', 'login_ok');            $this->model_smarty->render_ajax('msg_login', $this->app->Template_txf);            if (isset($_REQUEST['redirect_link'])) {                $redir = $this->app->Url_cliente . $_REQUEST['redirect_link']."?param=".date('Y-m-d-H-i-s');                redireciona($redir);            } else {                //                ver('chegou');// redireciona($pasta_final);//                ver($pasta_final);//                redireciona($pasta_final);//                redireciona($this->app->Url_cliente);//                ver($this->app->Url_cliente,1);                redireciona($this->app->Url_cliente."?param=".date('Y-m-d-H-i-s'));            }//                             die();        } else {//            ver('nao logou');            $this->smarty->assign('mensagem', 'login_erro');            $this->model_smarty->render_ajax('msg_login', $this->app->Template_txf);            die();        }    }    function logout() {        $this->session->unset_userdata('usuario');        if (isset($this->session->userdata['email']))            $this->session->unset_userdata('email');        if (isset($this->session->userdata['senha_temporaria']))            $this->session->unset_userdata('senha_temporaria');        if (isset($this->session->userdata['aposta']))            $this->session->unset_userdata('aposta');        $mensagem = '<label>Deslogado com sucesso!</label>';        if (isset($this->requisicao['redirect_link'])) {            redirect($this->requisicao['redirect_link']);        } else {            $this->index($mensagem);        }    }}