<?phpif (!defined('BASEPATH'))    exit('No direct script access allowed');require_once(COMMONPATH .        'libraries/REST_Controller.php');//error_reporting(E_ALL);//ini_set('display_errors', 1);class rest_lab extends REST_Controller {    public $cadastro;    public $configuracoes;    function __construct() {        parent::__construct();        header("Access-Control-Allow-Origin: *", true);        header("Access-Control-Allow-Credentials: true", true);        header("Access-Control-Allow-Methods: OPTIONS, GET, POST", true);//ver($this->app);        header("Access-Control-Allow-Headers: x-senha, x-usuario", true);        header("Access-Control-Max-Age: 842100", true);//   ver('chegou');        $this->response->format = 'json';        $this->autentica();    }    function grava_log($texto = '') {        $data = array();        $dados = $_REQUEST;        $data[] = "";        $data[] = "--------------------RETORNO----------------";        $data[] = date('d/m/Y H:i:s');        $data[] = $texto;        $data[] = "";        $data[] = '--------------------HEADERS----------------';        foreach (getallheaders() as $name => $value) {            $data[] = "$name: $value";        }        $data[] = "";        $data[] = '---------------------POST-----------------------';        if (isset($dados)) {            if (is_array($dados)) {                foreach ($dados as $c => $v) {                    $data[] = $c . ': ' . $v;                }            }        }        $data[] = '-----------------------------------------------';        $output = implode("\n", $data);        $this->load->helper('file');        write_file(FCPATH . "log.txt", $output);    }    function autentica() {//ver($_REQUEST);//        ver('chegou');//        if ($_SERVER['REQUEST_METHOD'] == 'OPTIONS') {////            $this->response(array('codigo'=> 200, 'status' => 'success', 'message' => 'ok'), 200);//        }        if (!$_SERVER['HTTP_X_SENHA'] || !$_SERVER['HTTP_X_USUARIO']) {            $this->grava_log('x-usuario and x-senha são requeridos no cabeçalho');            $this->response(array('codigo' => 403, 'status' => 'error', 'error' => 'x-usuario and x-senha são requeridos no cabeçalho.'), 403);        }        $senha = $_SERVER['HTTP_X_SENHA'];        $usuario = $_SERVER['HTTP_X_USUARIO'];        $cadastro = $this->mbc->executa_sql("select * from configuracoes where Login_txf='{$usuario}' and Senha_txf='{$senha}'");        if ($cadastro[0]->Id_int) {            if ($cadastro[0]->Ativo_sel != 'SIM') {                $this->response(array('codigo' => 403, 'status' => 'error', 'error' => 'Cadastro inativo, consulte desenvolvedor.'), 403);            } else {                $this->cadastro = $cadastro[0];            }        } else {            $this->response(array('codigo' => 403, 'status' => 'error', 'error' => 'Usuário e senha inválidos.'), 403);        }    }    function resultados_post() {//        $this->busca_configuracoes();//        $this->response(array('codigo' => 200, 'status' => 'success', 'message' => 'Resultado gravado com sucesso'), 200);        date_default_timezone_set('America/Sao_Paulo');        $resultado = $_POST;//        $resultado['Id_cadastro'] = $usuario->Id_int;        $resultado['Atualizacao_dat'] = date("Y-m-d H:i:s");//        if (!is_lands()) {        //  $this->response(array('status' => 'error', 'message' => 'Aguarde,função em desenvolvimento!'), 200);//        } //ver($_SERVER);         if (!$_POST) {            $this->response(array('codigo' => 400, 'status' => 'error', 'message' => 'Nenhum dado enviado!'), 200);        }////        if (!$_POST['Ano_req_exame']) {//            $this->response(array('codigo' => 200, 'status' => 'error', 'message' => 'Ano_req_exame obrigatorio!'), 200);//        }        $arquivo = $_POST['Arquivo_txf'];        $res = $this->mbc->executa_sql("select * from resultados where Arquivo_txf='{$arquivo}'");//ver($res);        if ($res[0]) {            $acao = 'atualiza';        } else {            $acao = 'insere';        }        //Ano_req_exame=2016_0156_184&        //            $resposta=json_encode($_REQUEST);//            $this->response(array('status' => 'error', 'message' => $resposta), 200);        $this->load->library('validacao');        switch ($acao) {            case 'atualiza':                $rules = array(//                    array('field' => 'Codigo_cliente_txf', 'label' => 'Codigo_cliente_txf', 'rules' => 'required'),//                    array('field' => 'Codigo_requisicao_txf', 'label' => 'Codigo_requisicao_txf', 'rules' => 'required'),//                    array('field' => 'Nome_txf', 'label' => 'Nome_txf', 'rules' => 'required'),                    array('field' => 'Arquivo_txf', 'label' => 'Arquivo_txf', 'rules' => 'required'),                );                $this->validacao->set_rules($rules);                if ($this->validacao->run('resultados_post') != false) {                    if ($this->mbc->updateTable('resultados', $resultado, 'Arquivo_txf', $arquivo)) {                      //  $this->grava_log("Resultado atualizado com sucesso");//                        ver('chegou');                        $this->response(array('codigo' => 200, 'status' => 'success', 'message' => 'Resultado atualizado com sucesso'), 200);                    } else {                      //  $this->grava_log("Erro ao gravar solicitacao");                        $this->response(array('codigo' => 500, 'status' => 'error', 'message' => 'Erro ao gravar solicitacao!'), 200);                    }                } else {                    $this->response(array('codigo' => 400, 'status' => 'error', 'message' => $this->validacao->get_msg_erro()), 200);                }//                if ($this->mbc->updateTable('resultados', $resultado, 'Arquivo_txf', $arquivo)) {//                    $this->response(array('codigo' => 200, 'status' => 'success', 'message' => 'Resultado atualizado com sucesso'), 200);//                } else {//                    $this->response(array('codigo' => 500, 'status' => 'error', 'message' => 'Erro ao gravar solicitacao!'), 200);//                }                break;            case 'insere':                $resultado['Data_dat'] = date("Y-m-d H:i:s");                $rules = array(                    array('field' => 'Codigo_cliente_txf', 'label' => 'Codigo_cliente_txf', 'rules' => 'required'),                    array('field' => 'Codigo_requisicao_txf', 'label' => 'Codigo_requisicao_txf', 'rules' => 'required'),                    array('field' => 'Nome_txf', 'label' => 'Nome_txf', 'rules' => 'required'),                    array('field' => 'Arquivo_txf', 'label' => 'Arquivo_txf', 'rules' => 'required'),                );                $this->validacao->set_rules($rules);                if ($this->validacao->run('resultados_post') != false) {                    if ($this->mbc->db_insert('resultados', $resultado)) {                     //   $this->grava_log("Resultado gravado com sucesso");                        $this->response(array('codigo' => 200, 'status' => 'success', 'message' => 'Resultado gravado com sucesso'), 200);                    } else {                     //   $this->grava_log("Erro ao gravar solicitacao");                        $this->response(array('codigo' => 500, 'status' => 'error', 'message' => 'Erro ao gravar solicitacao!'), 200);                    }                } else {                  //  $this->grava_log($this->validacao->get_msg_erro());                    $this->response(array('codigo' => 400, 'status' => 'error', 'message' => $this->validacao->get_msg_erro()), 200);                }                break;        }    }    function teste_get() {        $this->response(array('codigo' => 200, 'status' => 'success', 'message' => 'Conexão estabelecida corretamente'), 200);    }    function resultados_get() {        ver('chegou no get');        $where = "where Id_int is not null";        if ($this->uri->segment(3)) {            $id = $this->uri->segment(3);            $where.= " and Codigo_requisicao_txf='$id'";        }        //        ver($this->app->Url_cliente);        $sql = "select r.*, CONCAT( '{$this->app->Url_cliente}laudos/', r.Arquivo_txf ) AS Caminho_txf from resultados r  $where";        $resultados = $this->mbc->executa_sql($sql);        if (isset($resultados[0])) {            $this->response(array('codigo' => 200, 'status' => 'success', 'data' => $resultados), 200);        } else {            $this->response(array('codigo' => 404, 'status' => 'error', 'message' => 'Nenhum resultado encontrado!'), 200);        }    }    }