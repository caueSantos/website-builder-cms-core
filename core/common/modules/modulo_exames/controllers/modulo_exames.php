<?phpif (!defined('BASEPATH'))    exit('No direct script access allowed');require_once(COMMONPATH .        'core/lands_core.php');class modulo_exames extends lands_core {    public $usuario;    public $Pasta_exames = 'usuarios/ftp/';    function __construct() {                $this->load->library('session');                parent::__construct();        $this->checa_login();        $this->abre_modulo();    }    function index() {                $funcao = $this->pagina_atual;        if ($this->uri->segment($this->app->Segmento_padrao_txf + 1)) {            $this->pagina_atual = $this->uri->segment($this->app->Segmento_padrao_txf + 1);            $funcao = ($this->uri->segment($this->app->Segmento_padrao_txf + 1));        }        if (!method_exists(__CLASS__, $funcao)) {            $this->carrega_pagina($this->pagina_atual);        } else {//executa uma funcao que deve ser programa nesta classe.            $this->$funcao();        }    }    function abre_modulo() {        if (isset($this->session->userdata['usuario'])) {            $this->usuario = $this->session->userdata['usuario'];            $this->smarty->assign('user', $this->usuario);            $this->smarty->assign('usuario', $this->usuario);        }        $this->switch_pagina();    }    function switch_pagina() {        $this->load->library('session');        switch ($this->pagina_atual) {            case 'resultados'://redirect($this->usuario->Pasta_txf); //                ver($this->pagina_atual, 1);//                ver($this->usuario->Pasta_txf);//                if (!is_lands()) {////                    redireciona($this->usuario->Pasta_txf);//                } else {//                    $pasta = urlencode($this->usuario->Pasta_txf);                $this->model_smarty->render_bloco('menu_topo', $this->app->Template_txf);                echo "<style>iframe{ border:none }</style>";                echo "<iframe width='100%' border='none' height='100%' src='{$this->usuario->Pasta_txf}'></iframe>";                //$resposta['contents']="TESTE LANDS";                 //    $resposta = $this->curlContents($this->usuario->Pasta_txf, 'GET');//                    ver($this->usuario->Pasta_txf,1);//                    $resposta=file_get_contents($this->usuario->Pasta_txf);//                    $resposta = $this->get_web_page($this->usuario->Pasta_txf);                //     ver($resposta);                //    print_r($resposta['contents']);                die();                // }//                die();                break;            case 'resultados_exames'://redirect($this->usuario->Pasta_txf);                  $this->model_smarty->render_bloco('menu_topo', $this->app->Template_txf);                echo "<style>iframe{ border:none }</style>";                echo "<iframe width='100%' border='none' height='100%' src='{$this->usuario->Pasta_txf}'></iframe>";//                redireciona($this->usuario->Pasta_txf);//                //                               ver($this->usuario->Pasta_txf);//                               $pasta = urlencode($this->usuario->Pasta_txf);//                                $pasta = $this->usuario->Pasta_txf;//                               ver($pasta);//                              $this->model_smarty->render_bloco('menu_topo', $this->app->Template_txf);//                              $resposta = $this->curlContents($pasta, 'GET');//                              ver($resposta,1);//                               print_r($resposta['contents']);                 die();                break;            default:                break;        }    }    function curlContents($url, $method = 'GET', $data = false, $headers = false, $returnInfo = true) {        $ch = curl_init();// ini_set("display_errors", 1);// ini_set("display_errors", 1);// error_reporting(E_ALL);        $url = str_replace(' ', '%20', $url);        if ($method == 'POST') {            curl_setopt($ch, CURLOPT_URL, $url);            curl_setopt($ch, CURLOPT_POST, true);            if ($data !== false) {                curl_setopt($ch, CURLOPT_POSTFIELDS, $data);            }        } else {            if ($data !== false) {                if (is_array($data)) {                    $dataTokens = array();                    foreach ($data as $key => $value) {                        array_push($dataTokens, urlencode($key) . '=' . urlencode($value));                    }                    $data = implode('&', $dataTokens);                }                curl_setopt($ch, CURLOPT_URL, $url . '?' . $data);            } else {                curl_setopt($ch, CURLOPT_URL, $url);            }        }        curl_setopt($ch, CURLOPT_URL, $url);        curl_setopt($ch, CURLOPT_HEADER, false);        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);        curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);        curl_setopt($ch, CURLOPT_TIMEOUT, 5);        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE);//        curl_setopt($ch,CURLOPT_USERAGENT,'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.17 (KHTML, like Gecko) Chrome/24.0.1312.52 Safari/537.17');        if ($headers !== false) {            curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);        }        $contents = curl_exec($ch);        if ($returnInfo) {            $info = curl_getinfo($ch);        }        curl_close($ch);        if ($returnInfo) {            return array('contents' => $contents, 'info' => $info);        } else {            return $contents;        }    }}