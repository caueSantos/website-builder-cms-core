<?phpif (!defined('BASEPATH'))      exit('No direct script access allowed');require_once(COMMONPATH .        'core/lands_core.php');class arquivos extends lands_core {      public $usuario_logado;      function __construct() {            parent::__construct();            if ($this->pagina_atual != 'cadastro') {                  $this->checa_login();                  $this->load->helper('form');                  $this->caminho_arquivos = '/home/fragaest/public_html/painel/arquivos/fragaest_sitenovo/';                  $this->abre_gerenciador();            }      }      function index() {            $funcao = $this->pagina_atual;            if ($this->uri->segment($this->app->Segmento_padrao_txf + 1)) {                  $funcao = ($this->uri->segment($this->app->Segmento_padrao_txf + 1));            }            if (!method_exists(__CLASS__, $funcao)) {                  $this->carrega_pagina($this->pagina_atual);            } else {//executa uma funcao que deve ser programa nesta classe.                  $this->$funcao();            }      }      function abre_gerenciador() {            date_default_timezone_set('America/Sao_Paulo');            if ($this->app->Conta_cpanel_txf == '') {                  die('Configurar Nome_cpanel_txf no aplicativo');            }            $this->usuario_logado = $this->session->userdata['usuario'];            $this->smarty->assign('usuario_logado', $this->usuario_logado);            $id = $this->usuario_logado->Id_int;            $this->conecta_mbc($this->app->Conexoes_for);            $pasta = $this->dados_conexao['database'];            $conta = $this->app->Conta_cpanel_txf;            $pasta_painel = $this->app->Pasta_painel;            $this->caminho_arquivos = str_replace("//", "/", "/home/$conta/public_html/$pasta_painel/arquivos/$pasta/");            $departamentos = $this->mbc->executa_sql("select * from downloads group by Departamento_sel");            $this->smarty->assign('departamentos', $departamentos);            $permissoes = $this->mbc->executa_sql("select * from checkboxes where Id_objeto_con=$id");            $this->smarty->assign('permissoes', $permissoes);            $downloads = $this->mbc->executa_sql("select d.* from downloads d left outer join arquivos a on d.Id_int=a.Id_arquivo_con");            $this->smarty->assign('downloads', $downloads);            $arquivos = $this->mbc->executa_sql("select d.Departamento_sel, a.*,a.Id_int as Id_arquivo, ch.* from arquivos a left outer join checkboxes ch on a.Id_arquivo_con=ch.Id_objeto_con left outer join downloads d on a.Id_arquivo_con=d.Id_int where a.Id_arquivo_con<>0 group by a.Nome_txf order by a.Data_int desc, a.Nome_txf, a.Id_arquivo_con ");            $arq = array();            $pasta = $this->dados_conexao['database'];            $path = FCPATH . $this->app->Pasta_painel . '/arquivos/' . $pasta . '/';            if (isset($arquivos[0])) {                  foreach ($arquivos as $arquivo) {                        $tam = get_file_info($path . $arquivo->Nome_txf, 'size');                        $arquivo->Tamanho_txf = number_format($tam['size'] / 1024, 2, '.', '');                  }            }            $this->smarty->assign('arquivos', $arquivos);            $this->model_smarty->carrega_bloco('lista_arquivos', 'lista_arquivos', $this->app->Template_txf);      }      function download() {            if ($this->uri->segment(3)) {                  $id = $this->uri->segment(3);            }            $this->conecta_mbc($this->app->Conexoes_for);            $arquivo = $this->mbc->executa_sql("select * from arquivos where Id_int=$id");            $caminho = $this->caminho_arquivos . $arquivo[0]->Caminho_txf;            $name = $arquivo[0]->Nome_txf;            $this->load->helper('download');            force_download($name, $caminho);      }      function enviar() {            $pasta = $this->dados_conexao['database'];            $upload_path_url = $this->app->Url_cliente . $this->app->Pasta_painel . '/arquivos/' . $pasta . '/';            $config['upload_path'] = FCPATH . $this->app->Pasta_painel . '/arquivos/' . $pasta . '/';            $config['allowed_types'] = '*';//    $config['upload_path'] = './uploads/';//    $config['allowed_types'] = 'zip,psd,cdr,csv,tiff,bmp,ai,psb,docx,rtf,txt,odt,ppt,pptx,xls,xlsx,avi,mp4,mp3,wma,rmvb,odd,wav,3gp,wmv,gzip,tar,exe,apk,doc,rar,pdf,jpg,jpeg,gif,png,zip,avi';            $config['overwrite'] = TRUE;            /* $config['max_size']	= '1000';             *               $config['max_width']  = '1024';              $config['max_height']  = '768'; */            $this->load->library('upload', $config);            if (!$this->upload->do_upload()) {                  echo '<div id="status">error</div>';                  echo '<div id="message">' . $this->upload->display_errors() . '</div>';            } else {                  $data = array('upload_data' => $this->upload->data());                  $arquivo['Nome_txf'] = $data['upload_data']['file_name'];                  $arquivo['Caminho_txf'] = 'arquivos/' . $pasta . '/' . $arquivo['Nome_txf'];                  $arquivo['Tipo_txf'] = $data['upload_data']['file_ext'];                  $arquivo['Descricao_txf'] = $_POST['descricao'];                  $arquivo['Id_arquivo_con'] = $_POST['departamentos'];                  $arquivo['Tabela_con'] = 'downloads';                  $date = new DateTime();                  $data_arquivo = $date->getTimestamp();                  $arquivo['Data_int'] = $data_arquivo;                  $this->conecta_mbc($this->app->Conexoes_for);                  $this->mbc->db_insert('arquivos', $arquivo);                  echo '<div id="status">success</div>';//then output your message (optional)                  echo '<div id="message">' . $data['upload_data']['file_name'] . ' Successfully uploaded.</div>';//pass the data to js                  echo '<div id="upload_data">' . json_encode($data) . '</div>';            }      }      function atualiza_lista_arquivos() {            $this->model_smarty->render_bloco('lista_arquivos', $this->app->Template_txf);      }      public function do_upload() {            //     $pasta = $this->dados_conexao['database'];            //       $upload_path_url = $this->app->Url_cliente . $this->app->Pasta_painel . '/arquivos/' . $pasta . '/';//            $config['upload_path'] = FCPATH . $this->app->Pasta_painel . '/arquivos/' . $pasta . '/';            //      $config['allowed_types'] = 'zip,psd,cdr,csv,tiff,bmp,ai,psb,docx,rtf,txt,odt,ppt,pptx,xls,xlsx,avi,mp4,mp3,wma,rmvb,odd,wav,3gp,wmv,gzip,tar,exe,apk,doc,rar,pdf,jpg,jpeg,gif,png,zip,avi';//            $config['allowed_types'] = 'jpg,doc,docx,pdf,zip,png,gif,rar';            //    $config['max_size'] = '300000';            //    $this->load->library('upload', $config);            if (!$this->upload->do_upload()) {                  $error = array('error' => $this->upload->display_errors());                  $this->load->view('upload', $error);            } else {                  $data = $this->upload->data();//set the data for the json array	                  $info->name = $data['file_name'];                  $info->size = $data['file_size'];                  $info->type = $data['file_type'];                  $info->url = $upload_path_url . $data['file_name'];// I set this to original file since I did not create thumbs.  change to thumbnail directory if you do = $upload_path_url .'/thumbs' .$data['file_name']                  $info->thumbnail_url = $upload_path_url . $data['file_name'];                  $info->delete_url = base_url() . 'upload/deleteImage/' . $data['file_name'];                  $info->delete_type = 'DELETE';//this is why we put this in the constants to pass only json data                  if (IS_AJAX) {                        echo json_encode(array($info));//this has to be the only data returned or you will get an error.//if you don't give this a json array it will give you a Empty file upload result error//it you set this without the if(IS_AJAX)...else... you get ERROR:TRUE (my experience anyway)// so that this will still work if javascript is not enabled                  } else {                        $file_data['upload_data'] = $this->upload->data();                        ver('arquivo enviado com sucesso');                        $this->load->view('admin/upload_success', $file_data);                  }            }      }      public function deleteImage($file) {//gets the job done but you might want to add error checking and security            $success = unlink(FCPATH . 'uploads/' . $file);//info to see if it is doing what it is supposed to	            $info->sucess = $success;            $info->path = base_url() . 'uploads/' . $file;            $info->file = is_file(FCPATH . 'uploads/' . $file);            if (IS_AJAX) {//I don't think it matters if this is set but good for error checking in the console/firebug                  echo json_encode(array($info));            } else {//here you will need to decide what you want to show for a successful delete		                  $file_data['delete_data'] = $file;                  $this->load->view('admin/delete_success', $file_data);            }      }      function switch_pagina() {            //ver($this->pagina_atual);            $this->load->library('session');            $this->conecta_mbc($this->app->Conexoes_for);            switch ($this->pagina_atual) {                  case 'editar_cadastro':                        $user_id = $this->session->userdata['usuario']->Id_int;                        $user = $this->mbc->executa_sql("select * from cadastros where Id_int=$user_id");                        if (!isset($user[0]->Id_int))                              die('Erro ao editar usuario, usuario de id ' . $user_id . ' nao foi encontrado');                        $this->smarty->assign('user', $user[0]);                        break;                  case 'inicio':                        break;                  default:                        break;            }            $this->smarty->assign("sessao_ci", $this->session->all_userdata());            if (isset($_SESSION)) {                  $this->smarty->assign("sessao", $_SESSION);            }      }}